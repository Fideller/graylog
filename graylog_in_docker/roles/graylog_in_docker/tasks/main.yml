---  
- name: Include vm.max_map_count tasks
  include_tasks: sysctl.yml

- name: Создание структуры каталогов
  file:
    path: "{{ item.path }}"
    state: directory
    mode: "{{ item.mode }}"
  loop:
    - { path: /app/config,       mode: '0755' }
    - { path: /app/graylog,      mode: '0777' }
    - { path: /app/elastic,      mode: '0777' }
    - { path: /app/elastic/log,  mode: '0777' }
    - { path: /app/mongodb,      mode: '0777' }
    - { path: /app/mongodb/log,  mode: '0777' }

- name: Остановить все контейнеры
  shell: |
    docker ps -q | xargs -r docker stop
  args:
    executable: /bin/bash
  become: true

- name: Развертывание файла конфига graylog
  template:
    src: templates/server.conf.j2
    dest: /app/config/server.conf
  when: inventory_hostname in groups['graylog_node']


- name: Формируем JSON для инициализации Replica Set /tmp/rs_config.js
  delegate_to: localhost
  run_once: true
  template:
    src: rs_config.js.j2
    dest: /tmp/rs_config.js

- name: Создаем docker-compose.yml
  template:
    src: docker-compose.yml.j2
    dest: /app/docker-compose.yml

- name: Создаем elasticsearch.yml
  template:
    src: elasticsearch.yml.j2
    dest: /app/config/elasticsearch.yml
  when: "'elastic_node' in group_names"

- name: Создаем jvm.options
  template:
    src: jvm.options.j2
    dest: /app/config/jvm.options
  when: "'elastic_node' in group_names"

- name: Создаем mongod.conf
  template:
    src: mongod.conf.j2
    dest: /app/config/mongod.conf
  when: "'mongo_node' in group_names"

- name: Create systemd unit file for docker-compose
  copy:
    dest: "/etc/systemd/system/graylogd.service"
    content: |
      [Unit]
      Description=Docker Compose App graylogd
      Requires=docker.service
      After=docker.service

      [Service]
      Type=oneshot
      RemainAfterExit=true
      WorkingDirectory=/app
      ExecStart=/usr/bin/docker-compose up -d
      ExecStop=/usr/bin/docker-compose down
      TimeoutStartSec=0

      [Install]
      WantedBy=multi-user.target

- name: Reload systemd
  command: systemctl daemon-reload

- name: Enable and start the docker-compose systemd service
  systemd:
    name: "graylogd.service"
    enabled: true
    state: restarted


#- name: Показываем содержимое сгенерированного файла
#  delegate_to: localhost
#  run_once: true
#  command: cat /tmp/rs_config.js
#  register: rs_file
#
#- name: Выводим его
#  delegate_to: localhost
#  run_once: true
#  debug:
#    var: rs_file.stdout_lines


#- name: Инициализируем Replica Set
#  community.mongodb.mongodb_shell:
#    login_host: localhost
#    login_port: 27017
#    eval: "rs.initiate({{ rs_config | to_json }})"